<templates xml:space="preserve">
    <t t-name="hms_app.AccountingSettings">
        <div class="o_list_renderer o_renderer table-responsive" tabindex="-1" t-ref="root">
            <div class="accounting-header p-3">
                <p>Booking Reconciliation</p>
            </div>
            <div class="accounting-body w-100 p-3 m-0">
                <div class="accounting-data">
                    <div class="content-header">
                        <ul>
                            <li>
                                <span t-att-class="{active: state.activeYear === 2023}" t-on-click.prevent="() => this.setActiveYear(2023)">2023</span>
                            </li>
                            <li>
                                <span t-att-class="{active: state.activeYear === 2024}" t-on-click.prevent="() => this.setActiveYear(2024)">2024</span>
                            </li>
                            <li>
                                <span t-att-class="{active: state.activeYear === 2025}" t-on-click.prevent="() => this.setActiveYear(2025)">2025</span>
                            </li>
                            <li>
                                <span t-att-class="{active: state.activeYear === 2026}" t-on-click.prevent="() => this.setActiveYear(2026)">2026</span>
                            </li>
                        </ul>
                    </div>
                    <div class="accounting-months d-flex">
                        <t t-foreach="this.state.monthItems" t-as="quarter" t-key="quarter.quarter">
                            <div class="quarter">
                                <p><t t-esc="quarter.quarter"/> Kvartal</p>
                                <hr />
                                <div class="months-container d-flex flex-column gap-3">
                                    <t t-foreach="quarter.months" t-as="month" t-key="month.month">
                                        <t t-set="isRecord" t-value="monthHasRecord(month.id)"/>
                                        <div t-att-class="isRecord ? '' : 'inactive-month'">
                                            <div class="months" t-att-class="(this.state.currentMonth == month.month &amp;&amp; this.state.activeYear == this.state.currentYear) ? 'active-month' : ''" t-on-click.prevent="() => this.goMonthlyData(month.month)">
                                                <div class="month-name">
                                                    <h6 style="font-family: 'Inter'" t-att-class="isRecord ? 'name-active' : 'month-inactive'"><t t-esc="month.month"/></h6>
                                                    <h6 style="font-family: 'Inter'" t-att-class="isRecord ? 'name-active' : 'month-inactive'"><t t-esc="this.state.activeYear"/></h6>
                                                </div>
                                                <hr />
                                                <div class="month-no-data" t-att-class="isRecord ? 'd-none' : ''">
                                                    <span>No guest bookings</span>
                                                </div>
                                                <div class="month-data" t-att-class="!isRecord ? 'd-none' : ''">
                                                    <h5>Last reporting period</h5>
                                                    <div class="data-stats">
                                                        <div class="stats">
                                                            <span>Active bookings</span>
                                                            <h4><t t-esc="fillCount(month.id)"/></h4>
                                                        </div>
                                                        <hr/>
                                                        <div class="stats">
                                                            <span>Total</span>
                                                            <h4><t t-esc="fillTotal(month.id)"/></h4>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </t>
                                </div>
                            </div>
                        </t>
                    </div>
                </div>
            </div>

























            <table t-attf-class="o_list_table d-none table table-sm table-hover position-relative mb-0 {{props.list.isGrouped ? 'o_list_table_grouped' : 'o_list_table_ungrouped table-striped'}}" t-ref="table">
                <thead class="d-none">
                    <tr class="d-none">
                        <th t-if="hasSelectors" class="o_list_record_selector o_list_controller align-middle pe-1 cursor-pointer" tabindex="-1" t-on-keydown="(ev) => this.onCellKeydown(ev)" t-on-click.stop="toggleSelection">
                            <CheckBox disabled="!_canSelectRecord" value="selectAll" className="'d-flex m-0'" onChange.bind="toggleSelection"/>
                        </th>
                        <t t-foreach="state.columns" t-as="column" t-key="column.id">
                            <th t-if="column.type === 'field'"
                                t-att-data-name="column.name"
                                t-att-class="getColumnClass(column) + ' opacity-trigger-hover'"
                                t-on-pointerup="onColumnTitleMouseUp"
                                t-on-click="() => this.onClickSortColumn(column)"
                                t-on-keydown="(ev) => this.onCellKeydown(ev)"
                                t-att-data-tooltip-template="isDebugMode ? 'web.FieldTooltip' : false"
                                t-att-data-tooltip-info="isDebugMode ? makeTooltip(column) : false"
                                data-tooltip-delay="1000"
                                tabindex="-1"
                                class="d-none">
                                <t t-if="column.hasLabel and column.widget !== 'handle'">
                                <t t-set="isNumeric" t-value="isNumericColumn(column)"/>
                                    <div t-att-class="{'d-flex': true, 'flex-row-reverse': shouldReverseHeader(column)}" class="d-none">
                                        <span class="d-block min-w-0 text-truncate flex-grow-1" t-att-class="isNumeric ? 'o_list_number_th' : ''"
                                              t-esc="column.label"/>
                                        <i t-att-class="getSortableIconClass(column)"/>
                                    </div>
                                    <span
                                          class="o_resize position-absolute top-0 end-0 bottom-0 ps-1 bg-black-25 opacity-0 opacity-50-hover z-index-1"
                                          t-on-pointerdown.stop.prevent="onStartResize"/>
                                </t>
                            </th>
                            <th t-else="" t-on-keydown="(ev) => this.onCellKeydown(ev)" t-att-class="{o_list_button: column.type === 'button_group'}"/>
                        </t>
                        <th  t-if="props.onOpenFormView" t-on-keydown="(ev) => this.onCellKeydown(ev)" class="o_list_open_form_view"/>
                        <th t-if="displayOptionalFields or activeActions.onDelete" t-on-keydown="(ev) => this.onCellKeydown(ev)" class="o_list_controller o_list_actions_header position-sticky end-0">
                            <Dropdown t-if="displayOptionalFields"
                                class="'o_optional_columns_dropdown text-center border-top-0'"
                                togglerClass="'btn p-0'"
                                skipTogglerTabbing="true"
                                listRendererClass="uniqueRendererClass"
                                position="'bottom-end'">
                                <t t-set-slot="toggler">
                                    <i class="o_optional_columns_dropdown_toggle oi oi-fw oi-settings-adjust"/>
                                </t>

                                <t t-foreach="optionalFieldGroups" t-as="group" t-key="group_index">
                                    <div t-if="!group_first" role="separator" class="dropdown-divider"/>
                                    <DropdownItem t-if="group.displayName" parentClosingMode="'none'" onSelected="() => this.toggleOptionalFieldGroup(group.id)">
                                        <div class="fw-bold" t-esc="group.displayName"/>
                                    </DropdownItem>
                                    <t t-foreach="group.optionalFields" t-as="field" t-key="field_index">
                                        <DropdownItem parentClosingMode="'none'" onSelected="() => this.toggleOptionalField(field.name)">
                                            <CheckBox
                                                onChange="() => this.toggleOptionalField(field.name)"
                                                value="field.value"
                                                name="field.name"
                                            >
                                                <span class="d-flex align-items-center"><span class="text-truncate" t-esc="field.label"/><span class="ps-1" t-if="env.debug" t-esc="' (' + field.name + ')'" /></span>
                                            </CheckBox>
                                        </DropdownItem>
                                    </t>
                                </t>
                            </Dropdown>
                        </th>
                    </tr>
                </thead>
                <tbody class="ui-sortable">
                    <t t-call="{{ constructor.rowsTemplate }}">
                        <t t-set="list" t-value="props.list"/>
                    </t>
                </tbody>
                <tfoot t-on-click="() => props.list.leaveEditMode()" class="o_list_footer cursor-default" t-att-class="{o_sample_data_disabled: props.list.model.useSampleModel}">
                    <tr>
                        <td t-if="hasSelectors"/>
                        <t t-foreach="state.columns" t-as="column" t-key="column.id">
                            <t t-set="aggregate" t-value="aggregates[column.name]"/>
                            <td t-if="aggregate" class="o_list_number" >
                                <span t-esc="aggregate.value" t-att-data-tooltip="aggregate.help"/>
                            </td>
                            <td t-else=""/>
                        </t>
                        <td t-if="props.onOpenFormView"/>
                        <td t-if="displayOptionalFields or activeActions.onDelete" />
                    </tr>
                </tfoot>
            </table>
        </div>
    </t>
</templates>
